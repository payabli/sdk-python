# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class VendorSummary(UniversalBaseModel):
    in_transit_bills: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="inTransitBills")] = None
    in_transit_bills_amount: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="inTransitBillsAmount")
    ] = None
    overdue_bills: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="overdueBills")] = None
    overdue_bills_amount: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="overdueBillsAmount")
    ] = None
    paid_bills: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="paidBills")] = None
    paid_bills_amount: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="paidBillsAmount")] = (
        None
    )
    pending_bills: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="pendingBills")] = None
    pending_bills_amount: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="pendingBillsAmount")
    ] = None
    total_bills: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="totalBills")] = None
    total_bills_amount: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="totalBillsAmount")] = (
        None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
