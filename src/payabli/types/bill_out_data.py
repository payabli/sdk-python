# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .accounting_field import AccountingField
from .additional_data_string import AdditionalDataString
from .attachments import Attachments
from .billitems import Billitems
from .billstatus import Billstatus
from .comments import Comments
from .datenullable import Datenullable
from .frequency import Frequency
from .net_amountstring import NetAmountstring
from .terms import Terms
from .vendor_data import VendorData


class BillOutData(UniversalBaseModel):
    accounting_field_1: typing_extensions.Annotated[
        typing.Optional[AccountingField], FieldMetadata(alias="accountingField1")
    ] = None
    accounting_field_2: typing_extensions.Annotated[
        typing.Optional[AccountingField], FieldMetadata(alias="accountingField2")
    ] = None
    additional_data: typing_extensions.Annotated[
        typing.Optional[AdditionalDataString], FieldMetadata(alias="AdditionalData")
    ] = None
    attachments: typing.Optional[Attachments] = pydantic.Field(default=None)
    """
    An array of bill images. Attachments aren't required, but we strongly recommend including them. Including a bill image can make payouts smoother and prevent delays. You can include either the Base64-encoded file content, or you can include an fURL to a public file. The maximum file size for image uploads is 30 MB.
    """

    bill_date: typing_extensions.Annotated[typing.Optional[Datenullable], FieldMetadata(alias="billDate")] = (
        pydantic.Field(default=None)
    )
    """
    Date of bill. Accepted formats: YYYY-MM-DD, MM/DD/YYYY.
    """

    bill_items: typing_extensions.Annotated[typing.Optional[Billitems], FieldMetadata(alias="billItems")] = None
    bill_number: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="billNumber")] = pydantic.Field(
        default=None
    )
    """
    Unique identifier for the bill. Required when adding a bill.
    """

    comments: typing.Optional[Comments] = None
    due_date: typing_extensions.Annotated[typing.Optional[Datenullable], FieldMetadata(alias="dueDate")] = (
        pydantic.Field(default=None)
    )
    """
    Due date of bill. Accepted formats: YYYY-MM-DD, MM/DD/YYYY.
    """

    end_date: typing_extensions.Annotated[typing.Optional[Datenullable], FieldMetadata(alias="endDate")] = (
        pydantic.Field(default=None)
    )
    """
    End Date for scheduled bills. Applied only in `Mode` = 1. Accepted formats: YYYY-MM-DD, MM/DD/YYYY
    """

    frequency: typing.Optional[Frequency] = pydantic.Field(default=None)
    """
    Frequency for scheduled bills. Applied only in `Mode` = 1.
    """

    mode: typing.Optional[int] = pydantic.Field(default=None)
    """
    Bill mode: value `0` for one-time bills, `1` for scheduled bills.
    """

    net_amount: typing_extensions.Annotated[typing.Optional[NetAmountstring], FieldMetadata(alias="netAmount")] = (
        pydantic.Field(default=None)
    )
    """
    Net Amount owed in bill. Required when adding a bill.
    """

    status: typing.Optional[Billstatus] = None
    terms: typing.Optional[Terms] = None
    vendor: typing.Optional[VendorData] = pydantic.Field(default=None)
    """
    The vendor associated with the bill. Although you can create a vendor in a create bill request, Payabli recommends creating a vendor separately and passing a valid `vendorNumber` here. At minimum, the `vendorNumber` is required. 
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
