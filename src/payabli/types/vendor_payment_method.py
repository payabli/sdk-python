# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .vendor_payment_method_method import VendorPaymentMethodMethod


class VendorPaymentMethod(UniversalBaseModel):
    """
    Object containing details about the payment method to use for the payout.
    """

    method: typing.Optional[VendorPaymentMethodMethod] = pydantic.Field(default=None)
    """
    Payment method to use for payout. Leave empty for managed payables.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
